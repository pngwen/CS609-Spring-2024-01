Original Grammar
================
< Expression > ::= < Expression > "+" < Term >
                   | < Expression > "-" < Term >
                   | < Term >
                   
< Term >       ::= < Term > "*" < Factor >
                   | < Term > "/" < Factor >
                   | < Factor >
                   
< Factor >     ::= < Factor > "^" < Exponent >
                   | < Exponent >
                   
< Exponent >   ::= < Number >
                   | "(" < Expression > ")"
                   
< Number >     ::= < Integer > | < Real >

< Integer >    ::= < Integer > < Digit >
                   | < Digit >

< Real >       ::= < Integer > "." < Integer >

< Digit >      ::= "0"|"1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9"


LL(1) Grammar
=============
This is the grammar after tranforming the relevant parts into LL(1).

< Expression > ::= < Term > < Expression' >
< Expression' >::= "+" < Term > < Expression' >
                   |"-" < Term > < Expression' >
                   | ""
                   
< Term >       ::= < Factor > < Term' > 
< Term' >      ::= "*" < Factor > < Term' >
                   | "/" < Factor > < Term' >
                   | ""

< Factor >     ::= < Exponent > < Factor' >
< Factor' >    ::= "^" < Exponent >
                   | ""
                   
< Exponent >   ::= < Number >
                   | "(" < Expression > ")"
                   
< Number >     ::= < Integer > | < Real >

< Integer >    ::= < Integer > < Digit >
                   | < Digit >

< Real >       ::= < Integer > "." < Integer >

< Digit >      ::= "0"|"1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9"


Parser Grammar
==============
This is the grammar with the tokens removed and placed in a lexer grammar.

< Expression > ::= < Term > < Expression' >
< Expression' >::= ADD < Term > < Expression' >
                   | SUB < Term > < Expression' >
                   | ""
                   
< Term >       ::= < Factor > < Term' > 
< Term' >      ::= MUL < Factor > < Term' >
                   | DIV < Factor > < Term' >
                   | ""

< Factor >     ::= < Exponent > < Factor' >
< Factor' >    ::= POW < Exponent >
                   | ""
                   
< Exponent >   ::= INT 
                   | REAL
                   | LPAR < Expression > RPAR

Lexer Grammar
=============
This is the set of regular expressions defining the tokens.

ADD    \+
SUB    -
MUL    *
DIV    /
POW    ^
LPAREN \(
RPAREN \)
INT    [0-9]+
REAL   [0-9]+\.[0-9]+